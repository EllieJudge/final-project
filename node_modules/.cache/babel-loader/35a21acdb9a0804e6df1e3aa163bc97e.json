{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCoins } from '../actions/coinActions';\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\n\nclass Coins extends Component {\n  //Wait for coins data before mounting\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins();\n  }\n\n  render() {\n    let coinItems = '';\n    console.log(this.props.coinsProps.data); //coinsProps is our state turned into props\n\n    if (this.props.coinsProps.data) {\n      //if there is data...\n      return React.createElement(SimpleTable //return this component with data fed into it\n      , {\n        data: this.props.coinsProps.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    } else {\n      coinItems = 'Loading...';\n    }\n\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //This turns our state into props we can use throughout the app\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items\n}); //This connects react to redux\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","connect","fetchCoins","SimpleTable","Coins","componentDidMount","console","log","props","render","coinItems","coinsProps","data","mapStateToProps","state","coins","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,SAAxB,C,CAAmC;;AAEnC,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1B;AACDK,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAKC,KAAL,CAAWN,UAAX;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,EAAhB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWG,UAAX,CAAsBC,IAAlC,EAFK,CAEmC;;AACxC,QAAI,KAAKJ,KAAL,CAAWG,UAAX,CAAsBC,IAA1B,EAAgC;AAAE;AAC1B,aAAQ,oBAAC,WAAD,CAAa;AAAb;AACJ,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,UAAX,CAAsBC,IADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAIP,KALD,MAKO;AACHF,MAAAA,SAAS,GAAG,YAAZ;AACH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,SADL,CADJ;AAKH;;AAvB0B,C,CAyB9B;;;AACA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC/BH,EAAAA,UAAU,EAAEG,KAAK,CAACC,KAAN,CAAYC;AADO,CAAL,CAA7B,C,CAIA;;;AACA,eAAef,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,KAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCoins } from '../actions/coinActions';\r\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\r\n\r\nclass Coins extends Component {\r\n    //Wait for coins data before mounting\r\n   componentDidMount() {\r\n       console.log('before did mount');\r\n       this.props.fetchCoins();\r\n   }\r\n   render() {\r\n       let coinItems = '';\r\n       console.log(this.props.coinsProps.data);//coinsProps is our state turned into props\r\n       if (this.props.coinsProps.data) { //if there is data...\r\n               return (<SimpleTable //return this component with data fed into it\r\n                   data={this.props.coinsProps.data}\r\n                    />\r\n               )\r\n       } else {\r\n           coinItems = 'Loading...';\r\n       }\r\n       console.log(this.props);\r\n       return (\r\n           <div>\r\n               {coinItems}\r\n           </div>\r\n       );\r\n   }\r\n}\r\n//This turns our state into props we can use throughout the app\r\nconst mapStateToProps = state => ({\r\n   coinsProps: state.coins.items\r\n})\r\n\r\n//This connects react to redux\r\nexport default connect(mapStateToProps, { fetchCoins } )(Coins);\r\n"]},"metadata":{},"sourceType":"module"}