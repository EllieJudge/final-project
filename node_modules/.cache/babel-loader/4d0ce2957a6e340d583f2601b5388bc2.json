{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { fetchCoins } from '../actions/coinActions';\nimport { makeStyles } from '@material-ui/core/styles';\n\nclass Coins extends Component {\n  //LIFECYCLE METHOD - WAIT FOR THIS DATA\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\n  }\n\n  render() {\n    //js always goes in render\n    console.log(this.props.coinsProps);\n    let coinItems = '';\n\n    if (this.props.coinsProps.data) {\n      return;\n      coinItems = this.props.coinsProps.data.map(coin => React.createElement(SimpleTable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    } else {\n      coinItems = 'loading...';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //this sends the state from the actions and reducers and converts it into props so can be \n//used anywhere within the app (as props)\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\n\n}); //exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins); //and exporting Coins component","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","Paper","Table","TableHead","TableBody","TableRow","TableCell","connect","fetchCoins","makeStyles","Coins","componentDidMount","console","log","props","render","coinsProps","coinItems","data","map","coin","mapStateToProps","state","coins","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,SAAvD,QAAuE,mBAAvE;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;AAEA,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAC1B;AACAW,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAKC,KAAL,CAAWN,UAAX,GAFe,CAEU;AAC5B;;AACDO,EAAAA,MAAM,GAAG;AACP;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,UAAvB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAG,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,IAAzB,EAA+B;AAC3B;AACDD,MAAAA,SAAS,GAAG,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,IAAtB,CAA2BC,GAA3B,CAAgCC,IAAI,IAE5C,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFQ,CAAZ;AAKC,KAPJ,MAOU;AACNH,MAAAA,SAAS,GAAG,YAAZ;AACH;;AACD,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,SAAN,CAFF;AAIH;;AAxB2B,C,CA2B9B;AACA;;;AACA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,UAAU,EAAEM,KAAK,CAACC,KAAN,CAAYC,KADM,CACA;;AADA,CAAL,CAA7B,C,CAIA;;;AACA,eAAejB,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,KAAzC,CAAf,C,CAA+D","sourcesContent":["import React, {Component} from 'react';\r\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCoins} from '../actions/coinActions';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nclass Coins extends Component {\r\n    //LIFECYCLE METHOD - WAIT FOR THIS DATA\r\n    componentDidMount(){\r\n        console.log('before did mount')\r\n        this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\r\n    }\r\n    render() {\r\n      //js always goes in render\r\n      console.log(this.props.coinsProps)\r\n      let coinItems = '';\r\n      if(this.props.coinsProps.data) {\r\n          return \r\n         coinItems = this.props.coinsProps.data.map( coin => (\r\n             \r\n             <SimpleTable />\r\n\r\n     \r\n       ))} else {\r\n          coinItems = 'loading...'\r\n      }\r\n      return (\r\n\r\n        <div>{coinItems}</div>\r\n      )\r\n  }  \r\n}\r\n\r\n//this sends the state from the actions and reducers and converts it into props so can be \r\n//used anywhere within the app (as props)\r\nconst mapStateToProps = state => ({\r\n    coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\r\n})\r\n\r\n//exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\r\nexport default connect(mapStateToProps, { fetchCoins })(Coins) //and exporting Coins component"]},"metadata":{},"sourceType":"module"}