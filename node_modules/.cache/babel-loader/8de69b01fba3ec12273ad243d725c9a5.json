{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';//this connects THIS component to redux store\nimport{fetchCoins}from'../actions/coinActions';import SimpleTable from'./Table';//Where our coins data is being mapped\nimport{InputBase,Button}from'@material-ui/core';import{ArrowDropDown,ArrowDropUp}from'@material-ui/icons';var arrowP;var arrowN;var divStyle={display:'flex',justifyContent:'flex-end',marginTop:'10px'};var buttonName={marginRight:'170px'};var buttonPrice={marginLeft:'170px'};var Coins=/*#__PURE__*/function(_Component){_inherits(Coins,_Component);function Coins(){var _getPrototypeOf2;var _this;_classCallCheck(this,Coins);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Coins)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={search:'',order:'',orderPrice:''};_this.handleChange=function(e){_this.setState({search:e.target.value});};_this.handleSort=function(){if(_this.state.order===''){_this.setState({order:'asc'});arrowN=React.createElement(ArrowDropUp,{color:\"primary\"});arrowP='';}else if(_this.state.order==='asc'){_this.setState({order:'des'});arrowN=React.createElement(ArrowDropDown,{color:\"primary\"});arrowP='';}else{_this.setState({order:''});arrowN='';}};_this.handleSortPrice=function(){if(_this.state.orderPrice===''){_this.setState({orderPrice:'asc'});arrowP=React.createElement(ArrowDropUp,{color:\"primary\"});arrowN='';}else if(_this.state.orderPrice==='asc'){_this.setState({orderPrice:'des'});arrowP=React.createElement(ArrowDropDown,{color:\"primary\"});arrowN='';}else{_this.setState({orderPrice:''});arrowP='';}};return _this;}_createClass(Coins,[{key:\"componentDidMount\",//Wait for coins data before mounting\nvalue:function componentDidMount(){console.log('before did mount');this.props.fetchCoins();}},{key:\"render\",value:function render(){var coinItems='';console.log('coin props values:',this.props.coinsProps);//coinsProps is our state TURNED INTO props by Redux magic\nif(this.props.coinsProps.data){//if there is data...\ncoinItems=React.createElement(SimpleTable//return this component with data fed into it\n,{data:this.props.coinsProps.data,search:this.state.search,order:this.state.order,orderPrice:this.state.orderPrice});}else{coinItems=React.createElement(\"div\",null,\"Loading Bitcoins... \");}console.log(this.props);//else return coinItems = loading...\nvar search=this.state.search;//sets the value as empty string/state\nreturn React.createElement(\"div\",null,React.createElement(\"div\",{style:divStyle},React.createElement(InputBase,{input:true,type:\"text\",value:search,onChange:this.handleChange,placeholder:\"Search...\"})),React.createElement(\"h3\",null,\"Top 100 Bitcoins from Coin Gecko!\"),React.createElement(Button,{style:buttonName,onClick:this.handleSort},\"Sort by Name \",arrowN),React.createElement(Button,{style:buttonPrice,onClick:this.handleSortPrice},\"Sort by Price \",arrowP),coinItems);}}]);return Coins;}(Component);//This turns our state into props we can use throughout the app\nvar mapStateToProps=function mapStateToProps(state){return{coinsProps:state.coins.items};};//This connects react to redux\nexport default connect(mapStateToProps,{fetchCoins:fetchCoins})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","connect","fetchCoins","SimpleTable","InputBase","Button","ArrowDropDown","ArrowDropUp","arrowP","arrowN","divStyle","display","justifyContent","marginTop","buttonName","marginRight","buttonPrice","marginLeft","Coins","state","search","order","orderPrice","handleChange","e","setState","target","value","handleSort","handleSortPrice","console","log","props","coinItems","coinsProps","data","mapStateToProps","coins","items"],"mappings":"+nBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAASC,OAAT,KAAwB,aAAxB,CAAsC;AACtC,OAASC,UAAT,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,SAAxB,CAAmC;AACnC,OAASC,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,oBAA3C,CAEA,GAAIC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,MAAJ,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACbC,OAAO,CAAE,MADI,CAEbC,cAAc,CAAE,UAFH,CAGbC,SAAS,CAAE,MAHE,CAAjB,CAMA,GAAMC,CAAAA,UAAU,CAAG,CACfC,WAAW,CAAE,OADE,CAAnB,CAIA,GAAMC,CAAAA,WAAW,CAAG,CAChBC,UAAU,CAAE,OADI,CAApB,C,GAKMC,CAAAA,K,2XACFC,K,CAAQ,CACJC,MAAM,CAAE,EADJ,CAEJC,KAAK,CAAE,EAFH,CAGJC,UAAU,CAAE,EAHR,C,OAaRC,Y,CAAe,SAACC,CAAD,CAAO,CAClB,MAAKC,QAAL,CAAc,CACdL,MAAM,CAAEI,CAAC,CAACE,MAAF,CAASC,KADH,CAAd,EAGH,C,OAEDC,U,CAAa,UAAM,CACf,GAAI,MAAKT,KAAL,CAAWE,KAAX,GAAqB,EAAzB,CAA6B,CAC7B,MAAKI,QAAL,CAAc,CACVJ,KAAK,CAAE,KADG,CAAd,EAGIZ,MAAM,CAAG,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,EAAT,CACAD,MAAM,CAAG,EAAT,CACH,CAND,IAOK,IAAI,MAAKW,KAAL,CAAWE,KAAX,GAAqB,KAAzB,CAAgC,CACjC,MAAKI,QAAL,CAAc,CACVJ,KAAK,CAAE,KADG,CAAd,EAGAZ,MAAM,CAAG,oBAAC,aAAD,EAAe,KAAK,CAAC,SAArB,EAAT,CACAD,MAAM,CAAG,EAAT,CACH,CANI,IAOA,CACD,MAAKiB,QAAL,CAAc,CACVJ,KAAK,CAAE,EADG,CAAd,EAGAZ,MAAM,CAAG,EAAT,CACH,CACJ,C,OAEDoB,e,CAAkB,UAAM,CACpB,GAAI,MAAKV,KAAL,CAAWG,UAAX,GAA0B,EAA9B,CAAkC,CAC9B,MAAKG,QAAL,CAAc,CACVH,UAAU,CAAE,KADF,CAAd,EAGAd,MAAM,CAAG,oBAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,EAAT,CACAC,MAAM,CAAG,EAAT,CACC,CANL,IAOS,IAAI,MAAKU,KAAL,CAAWG,UAAX,GAA0B,KAA9B,CAAqC,CACtC,MAAKG,QAAL,CAAc,CACVH,UAAU,CAAE,KADF,CAAd,EAGAd,MAAM,CAAG,oBAAC,aAAD,EAAe,KAAK,CAAC,SAArB,EAAT,CACAC,MAAM,CAAG,EAAT,CACH,CANI,IAOA,CACD,MAAKgB,QAAL,CAAc,CACVH,UAAU,CAAE,EADF,CAAd,EAGAd,MAAM,CAAG,EAAT,CACH,CACR,C,4DAxDD;kCACoB,CACjBsB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACA,KAAKC,KAAL,CAAW9B,UAAX,GACF,C,uCAsDO,CACL,GAAI+B,CAAAA,SAAS,CAAG,EAAhB,CACAH,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkC,KAAKC,KAAL,CAAWE,UAA7C,EAAyD;AAEzD,GAAI,KAAKF,KAAL,CAAWE,UAAX,CAAsBC,IAA1B,CAAgC,CAAE;AACzBF,SAAS,CACT,oBAAC,WAAY;AAAb,EACA,IAAI,CAAE,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,IAD5B,CACkC,MAAM,CAAE,KAAKhB,KAAL,CAAWC,MADrD,CAC6D,KAAK,CAAE,KAAKD,KAAL,CAAWE,KAD/E,CAEA,UAAU,CAAE,KAAKF,KAAL,CAAWG,UAFvB,EADA,CAKR,CAND,IAMO,CACHW,SAAS,CAAG,sDAAZ,CACH,CACDH,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EAAyB;AAEzB,GAAMZ,CAAAA,MAAM,CAAG,KAAKD,KAAL,CAAWC,MAA1B,CAAgC;AAChC,MACI,gCACK,2BAAK,KAAK,CAAEV,QAAZ,EACI,oBAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,IAAI,CAAC,MAAtB,CAA6B,KAAK,CAAEU,MAApC,CAA4C,QAAQ,CAAE,KAAKG,YAA3D,CAAyE,WAAW,CAAC,WAArF,EADJ,CADL,CAIS,kEAJT,CAKK,oBAAC,MAAD,EAAQ,KAAK,CAAET,UAAf,CAA2B,OAAO,CAAE,KAAKc,UAAzC,kBAAmEnB,MAAnE,CALL,CAMK,oBAAC,MAAD,EAAQ,KAAK,CAAEO,WAAf,CAA4B,OAAO,CAAE,KAAKa,eAA1C,mBAA0ErB,MAA1E,CANL,CAOMyB,SAPN,CADJ,CAWH,C,mBA7FgBjC,S,EA+FpB;AACA,GAAMoC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAjB,KAAK,QAAK,CAC/Be,UAAU,CAAEf,KAAK,CAACkB,KAAN,CAAYC,KADO,CAAL,EAA7B,CAIA;AACA,cAAerC,CAAAA,OAAO,CAACmC,eAAD,CAAkB,CAAElC,UAAU,CAAVA,UAAF,CAAlB,CAAP,CAA0CgB,KAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';//this connects THIS component to redux store\r\nimport { fetchCoins } from '../actions/coinActions';\r\nimport SimpleTable from './Table'; //Where our coins data is being mapped\r\nimport { InputBase, Button } from '@material-ui/core'\r\nimport { ArrowDropDown, ArrowDropUp } from '@material-ui/icons'\r\n\r\nlet arrowP\r\nlet arrowN\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: '10px'\r\n  };\r\n\r\nconst buttonName = {\r\n    marginRight: '170px'\r\n}\r\n\r\nconst buttonPrice = {\r\n    marginLeft: '170px'\r\n}\r\n\r\n\r\nclass Coins extends Component {\r\n    state = {\r\n        search: '',\r\n        order: '',\r\n        orderPrice: ''\r\n    }\r\n\r\n\r\n    //Wait for coins data before mounting\r\n    componentDidMount() {\r\n       console.log('before did mount');\r\n       this.props.fetchCoins();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSort = () => {\r\n        if (this.state.order === '') {\r\n        this.setState({\r\n            order: 'asc',\r\n        })\r\n            arrowN = <ArrowDropUp color=\"primary\"/>\r\n            arrowP = ''\r\n        }\r\n        else if (this.state.order === 'asc') {\r\n            this.setState({\r\n                order: 'des'\r\n            })\r\n            arrowN = <ArrowDropDown color=\"primary\"/>\r\n            arrowP = ''\r\n        } \r\n        else {\r\n            this.setState({\r\n                order: ''\r\n            })\r\n            arrowN = ''\r\n        } \r\n    }\r\n\r\n    handleSortPrice = () => {\r\n        if (this.state.orderPrice === '') {\r\n            this.setState({\r\n                orderPrice: 'asc'\r\n            })\r\n            arrowP = <ArrowDropUp color=\"primary\"/>\r\n            arrowN = ''\r\n            }\r\n            else if (this.state.orderPrice === 'asc') {\r\n                this.setState({\r\n                    orderPrice: 'des'\r\n                })\r\n                arrowP = <ArrowDropDown color=\"primary\"/>\r\n                arrowN = ''\r\n            } \r\n            else {\r\n                this.setState({\r\n                    orderPrice: ''\r\n                })\r\n                arrowP = ''\r\n            } \r\n    }\r\n\r\n   render() {\r\n       let coinItems = '';\r\n       console.log('coin props values:', this.props.coinsProps);//coinsProps is our state TURNED INTO props by Redux magic\r\n       \r\n       if (this.props.coinsProps.data) { //if there is data...\r\n                coinItems = \r\n                <SimpleTable //return this component with data fed into it\r\n                data={this.props.coinsProps.data} search={this.state.search} order={this.state.order}\r\n                orderPrice={this.state.orderPrice}\r\n                />                  \r\n       } else {\r\n           coinItems = <div>Loading Bitcoins... </div>\r\n       }\r\n       console.log(this.props); //else return coinItems = loading...\r\n\r\n       const search = this.state.search//sets the value as empty string/state\r\n       return ( \r\n           <div>\r\n                <div style={divStyle}>\r\n                    <InputBase input type='text' value={search} onChange={this.handleChange} placeholder='Search...' />\r\n                </div>\r\n                    <h3>Top 100 Bitcoins from Coin Gecko!</h3>\r\n                <Button style={buttonName} onClick={this.handleSort}>Sort by Name {arrowN}</Button>\r\n                <Button style={buttonPrice} onClick={this.handleSortPrice}>Sort by Price {arrowP}</Button>\r\n                {coinItems} \r\n           </div>\r\n       );\r\n   }\r\n}\r\n//This turns our state into props we can use throughout the app\r\nconst mapStateToProps = state => ({\r\n   coinsProps: state.coins.items\r\n})\r\n\r\n//This connects react to redux\r\nexport default connect(mapStateToProps, { fetchCoins } )(Coins);\r\n"]},"metadata":{},"sourceType":"module"}