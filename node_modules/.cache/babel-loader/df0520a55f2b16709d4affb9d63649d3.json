{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //this connects THIS component to redux store\n\nimport { fetchCoins } from '../actions/coinActions';\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\n\nclass Coins extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      order: '',\n      orderPrice: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.handleSort = () => {\n      if (this.state.order === '') {\n        this.setState({\n          order: 'asc'\n        });\n      } else if (this.state.order === 'asc') {\n        this.setState({\n          order: 'des'\n        });\n      } else {\n        this.setState({\n          order: ''\n        });\n      }\n    };\n\n    this.handleSortPrice = () => {\n      if (this.state.orderPrice === '') {\n        this.setState({\n          orderPrice: 'asc'\n        });\n      } else if (this.state.orderPrice === 'asc') {\n        this.setState({\n          orderPrice: 'des'\n        });\n      } else {\n        this.setState({\n          orderPrice: ''\n        });\n      }\n    };\n  }\n\n  //Wait for coins data before mounting\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins();\n  }\n\n  render() {\n    let coinItems = '';\n    console.log('coin props values:', this.props.coinsProps); //coinsProps is our state TURNED INTO props\n\n    if (this.props.coinsProps.data) {\n      //if there is data...\n      coinItems = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(SimpleTable //return this component with data fed into it\n      , {\n        data: this.props.coinsProps.data,\n        search: this.state.search,\n        order: this.state.order,\n        orderPrice: this.state.orderPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    } else {\n      coinItems = 'Loading...';\n    }\n\n    console.log(this.props); //else return coinItems = loading...\n\n    const search = this.state.search; //sets the value as empty string/state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //This turns our state into props we can use throughout the app\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items\n}); //This connects react to redux\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","connect","fetchCoins","SimpleTable","Coins","state","search","order","orderPrice","handleChange","e","setState","target","value","handleSort","handleSortPrice","componentDidMount","console","log","props","render","coinItems","coinsProps","data","mapStateToProps","coins","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAAsC;;AACtC,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,WAAP,MAAwB,SAAxB,C,CAAmC;;AAEnC,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADkB;;AAAA,SAa1BC,YAb0B,GAaVC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AACdL,QAAAA,MAAM,EAAEI,CAAC,CAACE,MAAF,CAASC;AADH,OAAd;AAGH,KAjByB;;AAAA,SAmB1BC,UAnB0B,GAmBb,MAAM;AACf,UAAI,KAAKT,KAAL,CAAWE,KAAX,KAAqB,EAAzB,EAA6B;AAC7B,aAAKI,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE;AADG,SAAd;AAGC,OAJD,MAKK,IAAI,KAAKF,KAAL,CAAWE,KAAX,KAAqB,KAAzB,EAAgC;AACjC,aAAKI,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH,OAJI,MAKA;AACD,aAAKI,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;AACJ,KAnCyB;;AAAA,SAqC1BQ,eArC0B,GAqCR,MAAM;AACpB,UAAI,KAAKV,KAAL,CAAWG,UAAX,KAA0B,EAA9B,EAAkC;AAC9B,aAAKG,QAAL,CAAc;AACVH,UAAAA,UAAU,EAAE;AADF,SAAd;AAGC,OAJL,MAKS,IAAI,KAAKH,KAAL,CAAWG,UAAX,KAA0B,KAA9B,EAAqC;AACtC,aAAKG,QAAL,CAAc;AACVH,UAAAA,UAAU,EAAE;AADF,SAAd;AAGH,OAJI,MAKA;AACD,aAAKG,QAAL,CAAc;AACVH,UAAAA,UAAU,EAAE;AADF,SAAd;AAGH;AACR,KArDyB;AAAA;;AAO1B;AACAQ,EAAAA,iBAAiB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAKC,KAAL,CAAWjB,UAAX;AACF;;AA4CFkB,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,EAAhB;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKC,KAAL,CAAWG,UAA7C,EAHK,CAGoD;;AAEzD,QAAI,KAAKH,KAAL,CAAWG,UAAX,CAAsBC,IAA1B,EAAgC;AAAE;AACzBF,MAAAA,SAAS,GAET;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,WAAD,CAAa;AAAb;AACG,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,IAD/B;AACqC,QAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWC,MADxD;AACgE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KADlF;AAEG,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CAFA;AAUR,KAXD,MAWO;AACHa,MAAAA,SAAS,GAAG,YAAZ;AACH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EAnBK,CAmBoB;;AAEzB,UAAMb,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B,CArBK,CAqB2B;;AAChC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKe,SAFL,CADJ;AAMH;;AAnF0B,C,CAqF9B;;;AACA,MAAMG,eAAe,GAAGnB,KAAK,KAAK;AAC/BiB,EAAAA,UAAU,EAAEjB,KAAK,CAACoB,KAAN,CAAYC;AADO,CAAL,CAA7B,C,CAIA;;;AACA,eAAezB,OAAO,CAACuB,eAAD,EAAkB;AAAEtB,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,KAA1C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';//this connects THIS component to redux store\r\nimport { fetchCoins } from '../actions/coinActions';\r\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\r\n\r\nclass Coins extends Component {\r\n    state = {\r\n        search: '',\r\n        order: '',\r\n        orderPrice: ''\r\n    }\r\n\r\n    //Wait for coins data before mounting\r\n    componentDidMount() {\r\n       console.log('before did mount');\r\n       this.props.fetchCoins();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSort = () => {\r\n        if (this.state.order === '') {\r\n        this.setState({\r\n            order: 'asc'\r\n        })\r\n        }\r\n        else if (this.state.order === 'asc') {\r\n            this.setState({\r\n                order: 'des'\r\n            })\r\n        } \r\n        else {\r\n            this.setState({\r\n                order: ''\r\n            })\r\n        } \r\n    }\r\n\r\n    handleSortPrice = () => {\r\n        if (this.state.orderPrice === '') {\r\n            this.setState({\r\n                orderPrice: 'asc'\r\n            })\r\n            }\r\n            else if (this.state.orderPrice === 'asc') {\r\n                this.setState({\r\n                    orderPrice: 'des'\r\n                })\r\n            } \r\n            else {\r\n                this.setState({\r\n                    orderPrice: ''\r\n                })\r\n            } \r\n    }\r\n\r\n   render() {\r\n       let coinItems = '';\r\n\r\n       console.log('coin props values:', this.props.coinsProps);//coinsProps is our state TURNED INTO props\r\n       \r\n       if (this.props.coinsProps.data) { //if there is data...\r\n                coinItems = \r\n                \r\n                <div>\r\n\r\n\r\n                <SimpleTable //return this component with data fed into it\r\n                   data={this.props.coinsProps.data} search={this.state.search} order={this.state.order}\r\n                   orderPrice={this.state.orderPrice}\r\n                    />  \r\n                 </div>            \r\n       } else {\r\n           coinItems = 'Loading...'; \r\n       }\r\n       console.log(this.props); //else return coinItems = loading...\r\n\r\n       const search = this.state.search//sets the value as empty string/state\r\n       return ( \r\n           <div>\r\n               \r\n               {coinItems} \r\n           </div>\r\n       );\r\n   }\r\n}\r\n//This turns our state into props we can use throughout the app\r\nconst mapStateToProps = state => ({\r\n   coinsProps: state.coins.items\r\n})\r\n\r\n//This connects react to redux\r\nexport default connect(mapStateToProps, { fetchCoins } )(Coins);\r\n"]},"metadata":{},"sourceType":"module"}