{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Hamburger.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Menu, Star } from '@material-ui/icons';\nimport { ListItemIcon, ListItemText, SwipeableDrawer, makeStyles, Divider, List } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NavLink } from 'react-router-dom';\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    display: 'flex'\n  },\n  links: {\n    textDecoration: 'none',\n    marginLeft: 20\n  }\n});\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    left: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, ['Home', 'Favourites', 'About'].map((text, index) => React.createElement(NavLink, {\n    to: '/' + text,\n    key: text,\n    className: classes.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, index % 2 === 0 ? React.createElement(MonetizationOnIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(Star, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    onClick: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(SwipeableDrawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    onOpen: toggleDrawer('left', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, sideList('left')));\n}","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Hamburger.js"],"names":["React","Menu","Star","ListItemIcon","ListItemText","SwipeableDrawer","makeStyles","Divider","List","MonetizationOnIcon","NavLink","useStyles","list","width","display","links","textDecoration","marginLeft","SwipeableTemporaryDrawer","classes","useState","left","state","setState","toggleDrawer","side","open","event","type","key","sideList","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Star } from '@material-ui/icons';\nimport {ListItemIcon, ListItemText, SwipeableDrawer, makeStyles, Divider, List } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    list: {\n      width: 250,\n      display: 'flex',\n      \n      \n    },\n    links: {\n      textDecoration: 'none',\n      marginLeft: 20,\n    }\n  });\n  \n  export default function SwipeableTemporaryDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n      left: false\n    });\n  \n    const toggleDrawer = (side, open) => event => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n        setState({ ...state, [side]: open });\n      };\n\n      const sideList = side => (\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={toggleDrawer(side, false)}\n          onKeyDown={toggleDrawer(side, false)}\n        >\n          <List  className={classes.list}  >\n            {['Home', 'Favourites', 'About'].map((text, index) => (\n                <NavLink to={'/' + text} key={text} className={classes.links} >\n                <ListItemIcon>{index % 2 === 0 ? <MonetizationOnIcon /> : <Star />}</ListItemIcon>\n\n                <ListItemText primary={text} />\n            </NavLink>\n            ))}\n          </List>\n          <Divider />\n        </div>\n      );\n      return (\n        <div>\n          <Menu onClick={toggleDrawer('left', true)} />\n          <SwipeableDrawer\n            open={state.left}\n            onClose={toggleDrawer('left', false)}\n            onOpen={toggleDrawer('left', true)}>\n            {sideList('left')}\n          </SwipeableDrawer>\n        </div>\n      );\n    }\n    \n"]},"metadata":{},"sourceType":"module"}