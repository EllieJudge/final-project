{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { Table, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { fetchCoins } from '../actions/coinActions';\n\nclass Coins extends Component {\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins();\n  }\n\n  render() {\n    //js always goes in render\n    console.log(this.props.coinsProps);\n    let coinItems = '';\n\n    if (this.props.coinsProps.data) {\n      coinItems = this.props.coins.data.map(coin => React.createElement(TableRow, {\n        key: coin.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, coin.name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coin.image.thumb,\n        alt: coin.image.small,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.current_price.gbp), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"\\u20AC\", coin.market_data.current_price.eur), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, coin.symbol), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.market_cap.gbp)));\n    } else {\n      coinItems = 'loading...';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //this sends the state from the actions and reducers and converting into props so can be \n//used anywhere within the app\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\n\n}); //exporting it and connecting it to redux, \n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","Table","TableBody","TableRow","TableCell","connect","fetchCoins","Coins","componentDidMount","console","log","props","render","coinsProps","coinItems","data","coins","map","coin","id","name","image","thumb","small","market_data","current_price","gbp","eur","symbol","market_cap","mapStateToProps","state","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,mBAArD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC1BQ,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAKC,KAAL,CAAWL,UAAX;AACH;;AAEHM,EAAAA,MAAM,GAAE;AACJ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,UAAvB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAG,KAAKH,KAAL,CAAWE,UAAX,CAAsBE,IAAzB,EAA+B;AAC5BD,MAAAA,SAAS,GAAG,KAAKH,KAAL,CAAWK,KAAX,CAAiBD,IAAjB,CAAsBE,GAAtB,CAA2BC,IAAI,IACxC,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,IAArB;AAA0B,QAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCD,IAAI,CAACE,IAA5C,CADH,EAEG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB;AAAK,QAAA,GAAG,EAAEF,IAAI,CAACG,KAAL,CAAWC,KAArB;AAA4B,QAAA,GAAG,EAAEJ,IAAI,CAACG,KAAL,CAAWE,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,CAFH,EAGG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA2BL,IAAI,CAACM,WAAL,CAAiBC,aAAjB,CAA+BC,GAA1D,CAHH,EAIG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2BR,IAAI,CAACM,WAAL,CAAiBC,aAAjB,CAA+BE,GAA1D,CAJH,EAKG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BT,IAAI,CAACU,MAA/B,CALH,EAMG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA2BV,IAAI,CAACM,WAAL,CAAiBK,UAAjB,CAA4BH,GAAvD,CANH,CADS,CAAZ;AAUF,KAXD,MAWO;AACHZ,MAAAA,SAAS,GAAG,YAAZ;AACH;;AAED,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,SAAN,CAFF;AAIH;;AA7B2B,C,CAgC9B;AACA;;;AACA,MAAMgB,eAAe,GAAGC,KAAK,KAAK;AAC9BlB,EAAAA,UAAU,EAAEkB,KAAK,CAACf,KAAN,CAAYgB,KADM,CACA;;AADA,CAAL,CAA7B,C,CAIA;;;AACA,eAAe3B,OAAO,CAACyB,eAAD,EAAkB;AAAExB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,KAAzC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Table, TableBody, TableRow, TableCell} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCoins} from '../actions/coinActions';\r\n\r\nclass Coins extends Component {\r\n    componentDidMount(){\r\n        console.log('before did mount')\r\n        this.props.fetchCoins();\r\n    }\r\n    \r\n  render(){\r\n      //js always goes in render\r\n      console.log(this.props.coinsProps)\r\n      let coinItems = '';\r\n      if(this.props.coinsProps.data) {\r\n         coinItems = this.props.coins.data.map( coin => (\r\n            <TableRow key={coin.id} >\r\n               <TableCell component=\"th\" scope=\"row\">{coin.name}</TableCell>\r\n               <TableCell align=\"right\"><img src={coin.image.thumb} alt={coin.image.small}></img></TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.current_price.gbp}</TableCell>\r\n               <TableCell align=\"right\">€{coin.market_data.current_price.eur}</TableCell>\r\n               <TableCell align=\"right\">{coin.symbol}</TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.market_cap.gbp}</TableCell>\r\n           </TableRow> \r\n       ))\r\n      } else {\r\n          coinItems = 'loading...'\r\n      }\r\n        \r\n      return (\r\n\r\n        <div>{coinItems}</div>\r\n      )\r\n  }  \r\n}\r\n\r\n//this sends the state from the actions and reducers and converting into props so can be \r\n//used anywhere within the app\r\nconst mapStateToProps = state => ({\r\n    coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\r\n})\r\n\r\n//exporting it and connecting it to redux, \r\nexport default connect(mapStateToProps, { fetchCoins })(Coins) "]},"metadata":{},"sourceType":"module"}