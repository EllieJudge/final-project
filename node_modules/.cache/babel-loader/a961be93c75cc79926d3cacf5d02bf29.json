{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { makeStyles, Paper, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { fetchCoins } from '../actions/coinActions';\n\nclass Coins extends Component {\n  //const classes = useStyles();\n  //LIFECYCLE METHOD - WAIT FOR THIS DATA\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\n  } // const useStyles = makeStyles(theme => ({\n  //     root: {\n  //       width: '70%',\n  //       margin: '15%',\n  //       marginTop: theme.spacing(3),\n  //       overflowX: 'auto',\n  //     },\n  //     table: {\n  //       minWidth: 650,\n  //     },\n  //     header: {\n  //       marginLeft: '40%',\n  //       marginTop: 0\n  //     }\n  //   }));\n  // const classes = useStyles();\n  //let classes = useStyles(); \n\n\n  render() {\n    const classes = useStyles();\n    const useStyles = makeStyles(theme => ({\n      root: {\n        width: '70%',\n        margin: '15%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto'\n      },\n      table: {\n        minWidth: 650\n      },\n      header: {\n        marginLeft: '40%',\n        marginTop: 0\n      }\n    })); //const classes = useStyles();\n    //js always goes in render\n\n    console.log(this.props.coinsProps); //const classes = useStyles();\n\n    let coinItems = '';\n\n    if (this.props.coinsProps.data) {\n      //const classes = useStyles();\n      coinItems = this.props.coinsProps.data.map(coin => React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Bitcoins (Top 100 from Coin Gecko)!\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Symbol\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Price in gbp\\xA0(\\xA3)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Price in eur\\xA0(\\u20AC)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Sym\\xA0(g)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Market Cap\\xA0(\\xA3)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Star\\xA0(\\u2606)\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        key: coin.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, coin.name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coin.image.thumb,\n        alt: coin.image.small,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.current_price.gbp), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"\\u20AC\", coin.market_data.current_price.eur), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, coin.symbol), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.market_cap.gbp))))));\n    } else {\n      coinItems = 'loading...';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //this sends the state from the actions and reducers and converts it into props so can be \n//used anywhere within the app (as props)\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\n\n}); //exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins); //and exporting Coins component","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","makeStyles","Paper","Table","TableHead","TableBody","TableRow","TableCell","connect","fetchCoins","Coins","componentDidMount","console","log","props","render","classes","useStyles","theme","root","width","margin","marginTop","spacing","overflowX","table","minWidth","header","marginLeft","coinsProps","coinItems","data","map","coin","id","name","image","thumb","small","market_data","current_price","gbp","eur","symbol","market_cap","mapStateToProps","state","coins","items"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { makeStyles, Paper, Table, TableHead, TableBody, TableRow, TableCell} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCoins} from '../actions/coinActions';\r\n\r\n\r\nclass Coins extends Component {\r\n//const classes = useStyles();\r\n\r\n    //LIFECYCLE METHOD - WAIT FOR THIS DATA\r\n    componentDidMount(){\r\n        console.log('before did mount')\r\n        this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\r\n    }\r\n\r\n    // const useStyles = makeStyles(theme => ({\r\n    //     root: {\r\n    //       width: '70%',\r\n    //       margin: '15%',\r\n    //       marginTop: theme.spacing(3),\r\n    //       overflowX: 'auto',\r\n    //     },\r\n    //     table: {\r\n    //       minWidth: 650,\r\n    //     },\r\n    //     header: {\r\n    //       marginLeft: '40%',\r\n    //       marginTop: 0\r\n    //     }\r\n    //   }));\r\n    // const classes = useStyles();\r\n\r\n//let classes = useStyles(); \r\n  render() {\r\n    const classes = useStyles();\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n          width: '70%',\r\n          margin: '15%',\r\n          marginTop: theme.spacing(3),\r\n          overflowX: 'auto',\r\n        },\r\n        table: {\r\n          minWidth: 650,\r\n        },\r\n        header: {\r\n          marginLeft: '40%',\r\n          marginTop: 0\r\n        }\r\n      }));\r\n    \r\n    //const classes = useStyles();\r\n      //js always goes in render\r\n      console.log(this.props.coinsProps)\r\n      //const classes = useStyles();\r\n      let coinItems = '';\r\n      if(this.props.coinsProps.data) {\r\n        //const classes = useStyles();\r\n         coinItems = this.props.coinsProps.data.map( coin => (\r\n          \r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell >Bitcoins (Top 100 from Coin Gecko)!</TableCell> \r\n                        <TableCell align=\"right\">Symbol</TableCell>\r\n                        <TableCell align=\"right\">Price in gbp&nbsp;(£)</TableCell>\r\n                        <TableCell align=\"right\">Price in eur&nbsp;(€)</TableCell>\r\n                        <TableCell align=\"right\">Sym&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Market Cap&nbsp;(£)</TableCell>\r\n                        <TableCell align=\"right\">Star&nbsp;(☆)</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>  \r\n                    <TableBody> \r\n            <TableRow key={coin.id} >\r\n               <TableCell component=\"th\" scope=\"row\">{coin.name}</TableCell>\r\n               <TableCell align=\"right\"><img src={coin.image.thumb} alt={coin.image.small}></img></TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.current_price.gbp}</TableCell>\r\n               <TableCell align=\"right\">€{coin.market_data.current_price.eur}</TableCell>\r\n               <TableCell align=\"right\">{coin.symbol}</TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.market_cap.gbp}</TableCell>\r\n           </TableRow> \r\n           </TableBody>\r\n      </Table>\r\n    </Paper>\r\n       ))\r\n      } else {\r\n          coinItems = 'loading...'\r\n      }\r\n        \r\n      return (\r\n\r\n        <div>{coinItems}</div>\r\n      )\r\n  }  \r\n}\r\n\r\n//this sends the state from the actions and reducers and converts it into props so can be \r\n//used anywhere within the app (as props)\r\nconst mapStateToProps = state => ({\r\n    coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\r\n})\r\n\r\n//exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\r\nexport default connect(mapStateToProps, { fetchCoins })(Coins) //and exporting Coins component"]},"metadata":{},"sourceType":"module"}