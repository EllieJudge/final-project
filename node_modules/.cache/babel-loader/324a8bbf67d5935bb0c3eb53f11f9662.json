{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\final-FINAL-projects\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //this connects THIS component to redux store\n\nimport { fetchCoins } from '../actions/coinActions';\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\n\nimport { InputBase, Button } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nlet arrowP;\nlet arrowN;\n\nclass Coins extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      order: '',\n      orderPrice: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.handleSort = () => {\n      if (this.state.order === '') {\n        this.setState({\n          order: 'asc'\n        });\n        arrowN = React.createElement(ArrowDropUpIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n        arrowP = '';\n      } else if (this.state.order === 'asc') {\n        this.setState({\n          order: 'des'\n        });\n        arrowN = React.createElement(ArrowDropDownIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n        arrowP = '';\n      } else {\n        this.setState({\n          order: ''\n        });\n        arrowN = '';\n      }\n    };\n\n    this.handleSortPrice = () => {\n      if (this.state.orderPrice === '') {\n        this.setState({\n          orderPrice: 'asc'\n        });\n        arrowP = React.createElement(ArrowDropUpIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n        arrowN = '';\n      } else if (this.state.orderPrice === 'asc') {\n        this.setState({\n          orderPrice: 'des'\n        });\n        arrowP = React.createElement(ArrowDropDownIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n        arrowN = '';\n      } else {\n        this.setState({\n          orderPrice: ''\n        });\n        arrowP = '';\n      }\n    };\n  }\n\n  //Wait for coins data before mounting\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins();\n  }\n\n  render() {\n    let coinItems = '';\n    console.log('coin props values:', this.props.coinsProps); //coinsProps is our state TURNED INTO props by Redux magic\n\n    if (this.props.coinsProps.data) {\n      //if there is data...\n      coinItems = React.createElement(SimpleTable //return this component with data fed into it\n      , {\n        data: this.props.coinsProps.data,\n        search: this.state.search,\n        order: this.state.order,\n        orderPrice: this.state.orderPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } else {\n      coinItems = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Loading Bitcoins... \");\n    }\n\n    console.log(this.props); //else return coinItems = loading...\n\n    const search = this.state.search; //sets the value as empty string/state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      input: true,\n      type: \"text\",\n      value: search,\n      onChange: this.handleChange,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Top 100 Bitcoins from Coin Gecko!\"), React.createElement(Button, {\n      onClick: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Sort by Name \", arrowN, \" \"), React.createElement(Button, {\n      onClick: this.handleSortPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Sort by Price \", arrowP), coinItems);\n  }\n\n} //This turns our state into props we can use throughout the app\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items\n}); //This connects react to redux\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\final-FINAL-projects\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","connect","fetchCoins","SimpleTable","InputBase","Button","ArrowDropDownIcon","ArrowDropUpIcon","arrowP","arrowN","Coins","state","search","order","orderPrice","handleChange","e","setState","target","value","handleSort","handleSortPrice","componentDidMount","console","log","props","render","coinItems","coinsProps","data","mapStateToProps","coins","items"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';//this connects THIS component to redux store\r\nimport { fetchCoins } from '../actions/coinActions';\r\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\r\nimport { InputBase, Button } from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\n\r\n\r\n\r\nlet arrowP\r\nlet arrowN\r\n\r\n\r\nclass Coins extends Component {\r\n    state = {\r\n        search: '',\r\n        order: '',\r\n        orderPrice: '',\r\n    }\r\n\r\n    //Wait for coins data before mounting\r\n    componentDidMount() {\r\n       console.log('before did mount');\r\n       this.props.fetchCoins();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSort = () => {\r\n        if (this.state.order === '') {\r\n        this.setState({\r\n            order: 'asc',\r\n        })\r\n        arrowN = <ArrowDropUpIcon color=\"primary\"/>\r\n        arrowP = ''\r\n        }\r\n        else if (this.state.order === 'asc') {\r\n            this.setState({\r\n                order: 'des'\r\n            })\r\n            arrowN = <ArrowDropDownIcon color=\"primary\"/>\r\n            arrowP = ''\r\n        } \r\n        else {\r\n            this.setState({\r\n                order: ''\r\n            })\r\n            arrowN = ''\r\n        } \r\n    }\r\n\r\n    handleSortPrice = () => {\r\n        if (this.state.orderPrice === '') {\r\n            this.setState({\r\n                orderPrice: 'asc'\r\n            })\r\n            arrowP = <ArrowDropUpIcon color=\"primary\"/>\r\n            arrowN = ''\r\n            }\r\n            else if (this.state.orderPrice === 'asc') {\r\n                this.setState({\r\n                    orderPrice: 'des'\r\n                })\r\n                arrowP = <ArrowDropDownIcon color=\"primary\"/>\r\n                arrowN = ''\r\n            } \r\n            else {\r\n                this.setState({\r\n                    orderPrice: ''\r\n                })\r\n                arrowP = ''\r\n            } \r\n    }\r\n\r\n\r\n   render() {\r\n       let coinItems = '';\r\n       console.log('coin props values:', this.props.coinsProps);//coinsProps is our state TURNED INTO props by Redux magic\r\n       \r\n       if (this.props.coinsProps.data) { //if there is data...\r\n                coinItems = \r\n                <SimpleTable //return this component with data fed into it\r\n                data={this.props.coinsProps.data} search={this.state.search} order={this.state.order}\r\n                orderPrice={this.state.orderPrice}\r\n                />                  \r\n       } else {\r\n           coinItems = <div>Loading Bitcoins... </div>\r\n       }\r\n       console.log(this.props); //else return coinItems = loading...\r\n\r\n       const search = this.state.search//sets the value as empty string/state\r\n       return ( \r\n           <div>\r\n<InputBase input type='text' value={search} onChange={this.handleChange} placeholder='Search...'/>\r\n           <h3>Top 100 Bitcoins from Coin Gecko!</h3>\r\n           <Button onClick={this.handleSort}>Sort by Name {arrowN} </Button>\r\n           <Button onClick={this.handleSortPrice}>Sort by Price {arrowP}</Button>\r\n            {coinItems} \r\n           </div>\r\n       );\r\n   }\r\n}\r\n//This turns our state into props we can use throughout the app\r\nconst mapStateToProps = state => ({\r\n   coinsProps: state.coins.items\r\n})\r\n\r\n//This connects react to redux\r\nexport default connect(mapStateToProps, { fetchCoins } )(Coins);\r\n"]},"metadata":{},"sourceType":"module"}