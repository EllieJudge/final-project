{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\coins.js\";\nimport React, { Component } from 'react';\nimport { Table, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nclass Coins extends Component {\n  render() {\n    //js always goes in render\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"hey\");\n  }\n\n} //this sends the state from the actions and reducers and converting into props so can be \n//used anywhere within the app\n\n\nconst mapStateToProps = state => ({\n  coins: state.coins.items //state coins coming from root/main reducers (same name!)\n\n}); //exporting it and connecting it to \n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\coins.js"],"names":["React","Component","Table","TableBody","TableRow","TableCell","connect","Coins","render","mapStateToProps","state","coins","items","fetchCoins"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,mBAArD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAE5BO,EAAAA,MAAM,GAAE;AACJ;AAEA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAIH;;AAT2B,C,CAY9B;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYC,KADW,CACL;;AADK,CAAL,CAA7B,C,CAGA;;;AACA,eAAeN,OAAO,CAACG,eAAD,EAAkB;AAACI,EAAAA;AAAD,CAAlB,CAAP,CAAuCN,KAAvC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Table, TableBody, TableRow, TableCell} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Coins extends Component {\r\n    \r\n  render(){\r\n      //js always goes in render\r\n\r\n      return (\r\n\r\n        <h1>hey</h1>\r\n      )\r\n  }  \r\n}\r\n\r\n//this sends the state from the actions and reducers and converting into props so can be \r\n//used anywhere within the app\r\nconst mapStateToProps = state => ({\r\n    coins: state.coins.items //state coins coming from root/main reducers (same name!)\r\n})\r\n//exporting it and connecting it to \r\nexport default connect(mapStateToProps, {fetchCoins})(Coins) "]},"metadata":{},"sourceType":"module"}