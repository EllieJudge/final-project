{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //this connects THIS component to redux store\n\nimport { fetchCoins } from '../actions/coinActions';\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\n\nimport Button from '@material-ui/core/Button';\nimport { InputBase } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nlet loadingStyle = {\n  color: 'red',\n  fontSize: '30px',\n  fontWeight: 'bold',\n  marginTop: '30px'\n};\nlet searchStyle = {\n  color: 'blue',\n  backgroundColor: 'yellow'\n};\n\nclass Coins extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      order: '',\n      orderPrice: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        search: e.target.value\n      });\n    };\n\n    this.handleSort = () => {\n      if (this.state.order === '') {\n        this.setState({\n          order: 'asc'\n        });\n      } else if (this.state.order === 'asc') {\n        this.setState({\n          order: 'des'\n        });\n      } else {\n        this.setState({\n          order: ''\n        });\n      }\n    };\n\n    this.handleSortPrice = () => {\n      if (this.state.orderPrice === '') {\n        this.setState({\n          orderPrice: 'asc'\n        });\n      } else if (this.state.orderPrice === 'asc') {\n        this.setState({\n          orderPrice: 'des'\n        });\n      } else {\n        this.setState({\n          orderPrice: ''\n        });\n      }\n    };\n  }\n\n  //Wait for coins data before mounting\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins();\n  }\n\n  render() {\n    let coinItems = '';\n    let arrowP = '';\n    console.log('coin props values:', this.props.coinsProps); //coinsProps is our state TURNED INTO props by Redux magic\n\n    if (this.props.coinsProps.data) {\n      //if there is data...\n      coinItems = React.createElement(SimpleTable //return this component with data fed into it\n      , {\n        data: this.props.coinsProps.data,\n        search: this.state.search,\n        order: this.state.order,\n        orderPrice: this.state.orderPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    } else {\n      coinItems = React.createElement(\"div\", {\n        style: loadingStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Loading... \");\n    }\n\n    console.log(this.props); //else return coinItems = loading...\n\n    const search = this.state.search; //sets the value as empty string/state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Top 100 Bitcoins from Coin Gecko!\"), React.createElement(\"div\", {\n      style: searchStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Search\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(InputBase, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.handleSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Sort by Name \"), React.createElement(Button, {\n      onClick: this.handleSortPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Sort by Price \", arrowP), coinItems);\n  }\n\n} //This turns our state into props we can use throughout the app\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items\n}); //This connects react to redux\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins);","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","connect","fetchCoins","SimpleTable","Button","InputBase","ArrowDropDownIcon","loadingStyle","color","fontSize","fontWeight","marginTop","searchStyle","backgroundColor","Coins","state","search","order","orderPrice","handleChange","e","setState","target","value","handleSort","handleSortPrice","componentDidMount","console","log","props","render","coinItems","arrowP","coinsProps","data","mapStateToProps","coins","items"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';//this connects THIS component to redux store\r\nimport { fetchCoins } from '../actions/coinActions';\r\nimport SimpleTable from './Table'; //Where our coins data is being mapped/rendered/called/WHATEVER!\r\nimport Button from '@material-ui/core/Button';\r\nimport { InputBase } from '@material-ui/core'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nlet loadingStyle = {\r\n    color: 'red',\r\n    fontSize: '30px',\r\n    fontWeight: 'bold',\r\n    marginTop: '30px'\r\n}\r\n\r\nlet searchStyle = {\r\n    color: 'blue',\r\n    backgroundColor: 'yellow',\r\n}\r\n\r\nclass Coins extends Component {\r\n    state = {\r\n        search: '',\r\n        order: '',\r\n        orderPrice: '',\r\n    }\r\n\r\n    //Wait for coins data before mounting\r\n    componentDidMount() {\r\n       console.log('before did mount');\r\n       this.props.fetchCoins();\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n        search: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSort = () => {\r\n        if (this.state.order === '') {\r\n        this.setState({\r\n            order: 'asc',\r\n        })\r\n        }\r\n        else if (this.state.order === 'asc') {\r\n            this.setState({\r\n                order: 'des'\r\n            })\r\n        } \r\n        else {\r\n            this.setState({\r\n                order: ''\r\n            })\r\n        } \r\n    }\r\n\r\n\r\n    handleSortPrice = () => {\r\n        if (this.state.orderPrice === '') {\r\n            this.setState({\r\n                orderPrice: 'asc'\r\n            })\r\n\r\n            }\r\n            else if (this.state.orderPrice === 'asc') {\r\n                this.setState({\r\n                    orderPrice: 'des'\r\n                })\r\n            } \r\n            else {\r\n                this.setState({\r\n                    orderPrice: ''\r\n                })\r\n            } \r\n    }\r\n\r\n   render() {\r\n       let coinItems = '';\r\n        let arrowP = '';\r\n\r\n        \r\n       console.log('coin props values:', this.props.coinsProps);//coinsProps is our state TURNED INTO props by Redux magic\r\n       \r\n       if (this.props.coinsProps.data) { //if there is data...\r\n                coinItems = \r\n                <SimpleTable //return this component with data fed into it\r\n                data={this.props.coinsProps.data} search={this.state.search} order={this.state.order}\r\n                orderPrice={this.state.orderPrice}\r\n                />                  \r\n       } else {\r\n           coinItems = <div style={loadingStyle}>Loading... </div>\r\n       }\r\n       console.log(this.props); //else return coinItems = loading...\r\n\r\n       const search = this.state.search//sets the value as empty string/state\r\n\r\n       \r\n       return ( \r\n           <div>\r\n           <h3> Top 100 Bitcoins from Coin Gecko!</h3>\r\n\r\n                <div style={searchStyle}>\r\n                    <h4>Search</h4>\r\n                    <input type='text' value={search} onChange={this.handleChange}/>\r\n               </div>\r\n               <InputBase />\r\n               <Button onClick={this.handleSort}>Sort by Name </Button>\r\n\r\n               <Button onClick={this.handleSortPrice}>Sort by Price {arrowP}</Button>\r\n               \r\n               {coinItems} \r\n           </div>\r\n       );\r\n   }\r\n}\r\n//This turns our state into props we can use throughout the app\r\nconst mapStateToProps = state => ({\r\n   coinsProps: state.coins.items\r\n})\r\n\r\n//This connects react to redux\r\nexport default connect(mapStateToProps, { fetchCoins } )(Coins);\r\n"]},"metadata":{},"sourceType":"module"}