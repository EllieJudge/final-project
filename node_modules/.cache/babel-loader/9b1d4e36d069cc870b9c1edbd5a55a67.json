{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\judge\\\\Desktop\\\\finalproject\\\\src\\\\components\\\\Coins.js\";\nimport React, { Component } from 'react';\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { fetchCoins } from '../actions/coinActions';\n\nclass Coins extends Component {\n  //LIFECYCLE METHOD - WAIT FOR THIS DATA\n  componentDidMount() {\n    console.log('before did mount');\n    this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\n  }\n\n  render() {\n    const classes = useStyles(); //js always goes in render\n\n    console.log(this.props.coinsProps);\n    let coinItems = '';\n\n    if (this.props.coinsProps.data) {\n      coinItems = this.props.coinsProps.data.map(coin => React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Bitcoins (Top 100 from Coin Gecko)!\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Symbol\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Price in gbp\\xA0(\\xA3)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Price in eur\\xA0(\\u20AC)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Sym\\xA0(g)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Market Cap\\xA0(\\xA3)\"), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Star\\xA0(\\u2606)\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        key: coin.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, coin.name), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: coin.image.thumb,\n        alt: coin.image.small,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.current_price.gbp), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"\\u20AC\", coin.market_data.current_price.eur), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, coin.symbol), React.createElement(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\xA3\", coin.market_data.market_cap.gbp))))));\n    } else {\n      coinItems = 'loading...';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, coinItems);\n  }\n\n} //this sends the state from the actions and reducers and converts it into props so can be \n//used anywhere within the app (as props)\n\n\nconst mapStateToProps = state => ({\n  coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\n\n}); //exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\n\n\nexport default connect(mapStateToProps, {\n  fetchCoins\n})(Coins); //and exporting Coins component","map":{"version":3,"sources":["C:\\Users\\judge\\Desktop\\finalproject\\src\\components\\Coins.js"],"names":["React","Component","Paper","Table","TableHead","TableBody","TableRow","TableCell","connect","fetchCoins","Coins","componentDidMount","console","log","props","render","classes","useStyles","coinsProps","coinItems","data","map","coin","root","table","id","name","image","thumb","small","market_data","current_price","gbp","eur","symbol","market_cap","mapStateToProps","state","coins","items"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Paper, Table, TableHead, TableBody, TableRow, TableCell} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport {fetchCoins} from '../actions/coinActions';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Coins extends Component {\r\n    //LIFECYCLE METHOD - WAIT FOR THIS DATA\r\n    componentDidMount(){\r\n        console.log('before did mount')\r\n        this.props.fetchCoins(); //calling fetch coins (fetch coins is now props)\r\n    }\r\n    \r\n  render(){\r\n    const classes = useStyles();\r\n      //js always goes in render\r\n      console.log(this.props.coinsProps)\r\n      let coinItems = '';\r\n      if(this.props.coinsProps.data) {\r\n          \r\n         coinItems = this.props.coinsProps.data.map( coin => (\r\n\r\n\r\n\r\n\r\n\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell >Bitcoins (Top 100 from Coin Gecko)!</TableCell> \r\n                        <TableCell align=\"right\">Symbol</TableCell>\r\n                        <TableCell align=\"right\">Price in gbp&nbsp;(£)</TableCell>\r\n                        <TableCell align=\"right\">Price in eur&nbsp;(€)</TableCell>\r\n                        <TableCell align=\"right\">Sym&nbsp;(g)</TableCell>\r\n                        <TableCell align=\"right\">Market Cap&nbsp;(£)</TableCell>\r\n                        <TableCell align=\"right\">Star&nbsp;(☆)</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>  \r\n                    <TableBody> \r\n\r\n\r\n            <TableRow key={coin.id} >\r\n               <TableCell component=\"th\" scope=\"row\">{coin.name}</TableCell>\r\n               <TableCell align=\"right\"><img src={coin.image.thumb} alt={coin.image.small}></img></TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.current_price.gbp}</TableCell>\r\n               <TableCell align=\"right\">€{coin.market_data.current_price.eur}</TableCell>\r\n               <TableCell align=\"right\">{coin.symbol}</TableCell>\r\n               <TableCell align=\"right\">£{coin.market_data.market_cap.gbp}</TableCell>\r\n           </TableRow> \r\n\r\n           </TableBody>\r\n      </Table>\r\n    </Paper>\r\n       ))\r\n      } else {\r\n          coinItems = 'loading...'\r\n      }\r\n        \r\n      return (\r\n\r\n        <div>{coinItems}</div>\r\n      )\r\n  }  \r\n}\r\n\r\n//this sends the state from the actions and reducers and converts it into props so can be \r\n//used anywhere within the app (as props)\r\nconst mapStateToProps = state => ({\r\n    coinsProps: state.coins.items //state coins coming from root/main reducers (same name!)\r\n})\r\n\r\n//exporting it and CONNECTING everything (these things) to redux, VERY IMPORTANT!!!\r\nexport default connect(mapStateToProps, { fetchCoins })(Coins) //and exporting Coins component"]},"metadata":{},"sourceType":"module"}